<!DOCTYPE html>
<html>
<head>
    <title>Virtual Doctor</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function() {
            // Perform actions once the DOM is ready
            // Replace this with the actual URL of the online doctor consultation page
            var url = "https://example.com/online-doctor-consultation";

            $.get(url, function(data) {
                // Parse the retrieved HTML data
                var parsedData = $.parseHTML(data);

                // Example: Traverse and extract consultation information
                var patientName = $(parsedData).find('.patient-name').text();
                var consultationDate = $(parsedData).find('.consultation-date').text();
                var doctorName = $(parsedData).find('.doctor-name').text();
                var prescription = $(parsedData).find('.prescription').text();

                // Display the extracted information
                $('#patient-name').text(patientName);
                $('#consultation-date').text(consultationDate);
                $('#doctor-name').text(doctorName);
                $('#prescription').text(prescription);
            });
        });
    </script>

    <style>
        body {
            background-image: url('https://cdn.wallpapersafari.com/38/87/XLwqyG.jpg')
        }
    </style>

    <script>
        function validateLoginForm() {
            let x = document.forms["loginform"]["email"].value;
            if (x == "") {
                alert("Email must be filled out");
                return false;
            }
            let y = document.forms["loginform"]["pswd"].value;
            if (y == "") {
                alert("Password must be filled out");
                return false;
            }
        }

        function validateRegForm() {
            let x = document.forms["regisForm"]["username"].value;
            if (x == "") {
                alert("Name must be filled out");
                return false;
            }
            let z = document.forms["regisForm"]["contact"].value;
            if (z == "") {
                alert("Contact must be filled out");
                return false;
            }
            let w = document.forms["regisForm"]["age"].value;
            if (w == "") {
                alert("Age must be filled out");
                return false;
            }
            let s = document.forms["regisForm"]["pswd"].value;
            if (s == "") {
                alert("Password must be filled out");
                return false;
            }

            let y = document.forms["regisForm"]["email"].value;
            if (y == "") {
                alert("Email must be filled out");
                return false;
            }
        }
    </script>
</head>
<body>
    <h1><center>Virtual Doctor</center></h1><br>
    <div class="row" style="background-color: rgb(112,200,213);">
        <div class="col"><button>Video Consult</button></div>
        <div class="col"><button>Medicines</button></div>
        <div class="col"><button>Lab Tests</button></div>
        <div class="col"><button>Toll-Free Number</button></div>
        <div class="col"><button onclick="document.location='registration.html'">Register</button></div>
        <div class="col"><button onclick="document.location='login.html'">Login</button></div>
    </div>
    <br><hr><br>

    <div>
        <h4><center>Consult Doctor at Anytime and from Anywhere</center></h4>
        <center><img src="https://www.docsapp.in/assets/images/optimized/Group-54797_2x.webp" alt="text" width="800" height="250"></center>
    </div>
    <div>
        <h3><center>How online consultation works?</center></h3>
        <center><img src="https://www.docsapp.in/assets/images/optimized/online-consu-img.webp" alt="doctors" width="600" height="160"></center>
    </div>
    <div>    
        <center><img src="https://www.docsapp.in/assets/images/optimized/Group-54796_2x.webp" alt="doctors" width="600" height="160"></center>
    </div>

    <div class="container mt-3">
        <h1><center>Login</center></h1><br><br>
        <form name="loginform" action="/action_page.php" onsubmit="return validateLoginForm()" method="post">
            <div class="mb-3 mt-3">
                <label for="email"><b>Email:</b></label><br>
                <input type="email" class="form-control" id="email" placeholder="Enter email" name="email">
            </div>
            <div class="mb-3">
                <label for="pwd"><b>Password:</b></label>
                <input type="password" class="form-control" id="pwd" placeholder="Enter password" name="pswd">
            </div>
            <div class="form-check mb-3">
                <label class="form-check-label">
                    <input class="form-check-input" type="checkbox" name="remember"> Remember me
                </label>
                <br><br>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <div class="container mt-3">
        <h2>Registration Form</h2>
        <form name="regisForm" action="/action_page.php" onsubmit="return validateRegForm()" method="post">
            <div class="mb-3 mt-3">
                <label for="name">Name:</label>
                <input type="text" class="form-control" placeholder="Enter name" name="username">
            </div>
            <div class="mb-3 mt-3">
                <label for="phone no">Contact:</label>
                <input type="number" class="form-control" placeholder="Enter contact" name="contact">
            </div>
            <div class="mb-3">
                <label for="age">Age:</label>
                <input type="number" class="form-control" placeholder="Enter age" name="age">
            </div>
            <div class="mb-3 mt-3">
                <label for="email">Email:</label>
                <input type="email" class="form-control" id="email" placeholder="Enter email" name="email">
            </div>
            <div class="mb-3">
                <label for="pwd">Password:</label>
                <input type="password" class="form-control"

 id="pwd" placeholder="Enter password" name="pswd">
            </div>
            <div class="form-radio mb-3">
                <p>Gender:</p>
                <label class="form-radio-label">
                    <input class="form-radio-input" type="radio" name="gender" required> M<br>
                </label>
                <label class="form-radio-label">
                    <input class="form-radio-input" type="radio" name="gender"> F
                </label>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <h1> Virtual Doctor Consultation Information</h1>
    <p><strong>Patient Name:</strong> <span id="patient-name"></span></p>
    <p><strong>Consultation Date:</strong> <span id="consultation-date"></span></p>
    <p><strong>Doctor Name:</strong> <span id="doctor-name"></span></p>
    <p><strong>Prescription:</strong> <span id="prescription"></span></p>

</body>
</html>



// Node.js Server (NodeJS.js)
const http = require('http');
const mysql = require('mysql');
const express = require("express");
const bodyParser = require('body-parser');

// Create a MySQL connection
const con = mysql.createConnection({
    host: "localhost",
    user: "root",
    password: "",
    database: "college"
});

// Create an Express app
const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Serve HTML file on root request
app.get('/', function (req, res) {
    res.sendFile(__dirname + '/register.html');
});

// Handle form submission
app.post('/', function (req, res) {
    var name = req.body.name;
    var email = req.body.email;
    var mno = req.body.mno;

    con.connect(function (error) {
        if (error) throw error;

        var sql = "INSERT INTO students (name, email, mno) VALUES ('" + name + "', '" + email + "','" + mno + "')";
        con.query(sql, function (error, result) {
            if (error) throw error;
            res.send("student registered successfuly" + result.insertId);
            res.end();
        });
    });
});

// Start the server
const server = http.createServer(app);
server.listen(7000);
console.log("server started running");


// Angular Component (app.component.ts)
import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl:
  
  import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  title = 'task7';
  reactiveForm: FormGroup;

  ngOnInit() {
    this.reactiveForm = new FormGroup({
      firstaname: new FormControl(null),
      lastaname: new FormControl(null),
      email: new FormControl(null),
      gender: new FormControl('male'),
      country: new FormControl('canada'),
      hobbies: new FormControl(null),
    });
  }

  onSubmit() {
    console.log(this.reactiveForm.value);
  }
}


import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { LoginComponent } from './login/login.component';
import { HomeComponent } from './home/home.component';

const routes: Routes = [
  { path: 'login', component: LoginComponent },
  { path: 'home', component: HomeComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
export const routingcomponents = [LoginComponent, HomeComponent];


'./app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  title = 'task7';
  reactiveForm: FormGroup;

  ngOnInit() {
    this.reactiveForm = new FormGroup({
      firstaname: new FormControl(null),
      lastaname: new FormControl(null),
      email: new FormControl(null),
      gender: new FormControl('male'),
      country: new FormControl('canada'),
      hobbies: new FormControl(null),
    });
  }

  onSubmit() {
    console.log(this.reactiveForm.value);
  }
}


import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  title = 'task7';
  reactiveForm: FormGroup;

  ngOnInit() {
    this.reactiveForm = new FormGroup({
      firstaname: new FormControl(null),
      lastaname: new FormControl(null),
      email: new FormControl(null),
      gender: new FormControl('male'),
      country: new FormControl('canada'),
      hobbies: new FormControl(null),
    });
  }

  onSubmit() {
    console.log(this.reactiveForm.value);
  }
}


import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { LoginComponent } from './login/login.component';
import { HomeComponent } from './home/home.component';

const routes: Routes = [
  { path: 'login', component: LoginComponent },
  { path: 'home', component: HomeComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
export const routingcomponents = [LoginComponent, HomeComponent];


import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { ReactiveFormsModule } from '@angular/forms';
import { AppRoutingModule, routingcomponents } from './app-routing.module';
import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent,
    routingcomponents
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

